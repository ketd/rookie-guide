# ==================== 服务器配置 ====================

# 服务器监听地址（默认：127.0.0.1）
# - 127.0.0.1: 仅本机访问
# - 0.0.0.0: 允许外部访问（生产环境使用）
SERVER_HOST=127.0.0.1

# 服务器监听端口（默认：8080）
SERVER_PORT=8080

# ==================== 数据库配置 ====================

# PostgreSQL数据库主机地址（默认：localhost）
# - localhost: 本地数据库
# - db: Docker容器名称（使用docker-compose时）
# - 192.168.1.100: 远程IP地址
DATABASE_HOST=localhost

# PostgreSQL数据库端口（默认：5432）
DATABASE_PORT=5432

# PostgreSQL数据库用户名（默认：postgres）
DATABASE_USER=postgres

# PostgreSQL数据库密码（必需）
# ⚠️ 警告：生产环境请使用强密码！
DATABASE_PASSWORD=password

# PostgreSQL数据库名称（默认：rookie_guide）
DATABASE_NAME=rookie_guide

# 数据库连接池最大连接数（默认：5）
# 建议值：CPU核心数 × 2 到 CPU核心数 × 4
# 开发环境：5
# 生产环境：根据服务器配置调整（如 20）
DATABASE_MAX_CONNECTIONS=5

# ==================== Docker环境配置示例 ====================
# 使用docker-compose时，将DATABASE_HOST改为容器名称：
# DATABASE_HOST=db
#
# ==================== 生产环境配置示例 ====================
# DATABASE_HOST=prod-database.example.com
# DATABASE_PORT=5432
# DATABASE_USER=prod_user
# DATABASE_PASSWORD=your-super-strong-password-here
# DATABASE_NAME=rookie_guide_prod

# ==================== JWT配置 ====================

# JWT签名密钥（必需，生产环境必须使用强随机密钥！）
# 
# 生成强密钥的方法：
# openssl rand -base64 64
#
# ⚠️ 警告：生产环境不要使用下面的示例密钥！
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production-please-use-openssl-rand-base64-64

# JWT Token有效期（秒）
# 默认：86400秒（24小时）
# 
# 常用值：
# - 3600: 1小时
# - 86400: 24小时（默认）
# - 604800: 7天
# - 2592000: 30天
JWT_EXPIRATION=86400

# ==================== 应用环境 ====================

# 应用运行环境（可选）
# development | production | testing
RUST_ENV=development

# 日志级别（可选）
# trace | debug | info | warn | error
RUST_LOG=info

# ==================== 开发环境快速配置 ====================
# 
# 复制本文件为 .env 并根据需要修改：
# cp .env.example .env
#
# 使用Docker启动数据库：
# docker-compose up -d
#
# 运行数据库迁移：
# make migrate
#
# 启动开发服务器：
# make dev
#
# ==================== 生产环境注意事项 ====================
#
# 1. ✅ 使用强随机的JWT_SECRET
# 2. ✅ 使用安全的数据库密码
# 3. ✅ 启用PostgreSQL SSL连接
# 4. ✅ 根据负载调整DATABASE_MAX_CONNECTIONS
# 5. ✅ 设置合适的JWT_EXPIRATION
# 6. ✅ 不要将.env文件提交到git（已在.gitignore中）

